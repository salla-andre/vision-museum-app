#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.100.15)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

reorder rootPrims = ["Root", "WoodPlank"]

def Xform "Root"
{
    reorder nameChildren = ["VaseGroup", "BallotGroup", "ImageBasedLight", "BustGroup", "Sphere", "WoodPlank"]
    def Xform "BustGroup" (
        active = true
    )
    {
        reorder nameChildren = ["InputTarget", "RigidBody", "Collider", "ImageBasedLightReceiver", "GroundingShadow", "Group"]
        float3 xformOp:translate = (0.75, 0, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = -1
            bool gravityEnabled = 1
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = -1
            bool lockRotationX = 1
            bool lockRotationY = 1
            bool lockRotationZ = 1
            bool lockTranslationX = 0
            bool lockTranslationY = 1
            bool lockTranslationZ = 0
            token motionType = "Dynamic"

            def RealityKitStruct "massFrame"
            {
                float3 m_inertia = (0.1, 0.1, 0.1)
                float m_mass = 0.001

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.7, 1.4265108, 0.7)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, 0.70075536, 0)
                }
            }
        }

        def RealityKitComponent "ImageBasedLightReceiver"
        {
            rel iblEntity = </Root/Sphere>
            uniform token info:id = "RealityKit.ImageBasedLightReceiver"
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def "Bust" (
            active = true
            references = @Bust.usdz@
        )
        {
            reorder nameChildren = ["Materials", "Meshes", "RigidBody", "Collider"]
            float3 xformOp:scale = (0.003, 0.003, 0.003)
            float3 xformOp:translate = (0, 0.89, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "Meshes"
            {
                over "Sketchfab_model"
                {
                    over "MCh_S_12_Rzezba_Popiersie_Rozy_Loewenfeld_OBJ_cleaner_gles"
                    {
                        over "Object_2"
                        {
                            over "Object_3"
                            {
                                over "Object_0"
                                {
                                }
                            }
                        }
                    }
                }
            }
        }

        def Cube "Cube" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/WoodPlank> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.7000000000000001
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 0.75, 1)
            float3 xformOp:translate = (0, 0.25, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/BustGroup/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }
    }

    def "WoodPlank" (
        active = true
        references = @WoodPlank.usdz@
    )
    {
        color3f inputs:Basecolor_Tint (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-56.812614, 67.17455)
                    float2 sizeInSubgraph = (160.5, 53)
                    int stackingOrderInSubgraph = 2352
                }
            }
        )
        float2 inputs:UV_Scale (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-725.2588, 351.55255)
                    float2 sizeInSubgraph = (138.5, 53)
                    int stackingOrderInSubgraph = 2272
                }
            }
        )
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)

        over "Dot"
        {
            float2 ui:nodegraph:node:size = (44, 18)
        }

        over "multiply"
        {
            float2 ui:nodegraph:node:size = (60, 36)
        }

        over "add"
        {
            float2 ui:nodegraph:node:size = (61.5, 36.5)
        }

        over "PreviewSurface"
        {
            float2 ui:nodegraph:node:size = (148.5, 199)
        }

        over "Mix"
        {
            float2 ui:nodegraph:node:size = (109, 145)
        }

        over "Swizzle"
        {
            float2 ui:nodegraph:node:size = (133.5, 40)
        }

        over "Swizzle_1"
        {
            float2 ui:nodegraph:node:size = (145.5, 53)
        }

        over "Multiply_1"
        {
            float2 ui:nodegraph:node:size = (60, 36)
        }

        over "BaseColor"
        {
            float2 ui:nodegraph:node:size = (158.5, 235)
        }

        over "Roughness"
        {
            float2 ui:nodegraph:node:size = (158.5, 235)
        }

        over "Metallic"
        {
            float2 ui:nodegraph:node:size = (158.5, 235)
        }

        over "Normal"
        {
            float2 ui:nodegraph:node:size = (158.5, 235)
        }
    }

    def Xform "VaseGroup" (
        active = true
    )
    {
        reorder nameChildren = ["InputTarget", "Collider", "RigidBody", "ImageBasedLightReceiver", "GroundingShadow", "Group"]
        float3 xformOp:translate = (0, 0, -2.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2289248, 1.099955, 0.20212466)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.0005336702, 0.5499775, -0.0010623261)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = -1
            bool gravityEnabled = 1
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = -1
            bool lockRotationX = 1
            bool lockRotationY = 1
            bool lockRotationZ = 1
            bool lockTranslationX = 0
            bool lockTranslationY = 1
            bool lockTranslationZ = 0
            token motionType = "Dynamic"

            def RealityKitStruct "massFrame"
            {
                float3 m_inertia = (0.1, 0.1, 0.1)
                float m_mass = 0.001

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "ImageBasedLightReceiver"
        {
            rel iblEntity = </Root/Sphere>
            uniform token info:id = "RealityKit.ImageBasedLightReceiver"
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def "Vase" (
            references = @vaso.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.001, 0.001, 0.001)
            float3 xformOp:translate = (0, 0.96, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "Meshes"
            {
                over "Sketchfab_model"
                {
                    over "KGZ_5919_Waza_typu_hydria__OBJ_cleaner_gles"
                    {
                        over "Object_2"
                        {
                            over "Object_3"
                            {
                                over "Object_0"
                                {
                                }
                            }

                            over "Object_4"
                            {
                                over "Object_1"
                                {
                                }
                            }

                            over "Object_5"
                            {
                                over "Object_2"
                                {
                                }
                            }

                            over "Object_6"
                            {
                                over "Object_3"
                                {
                                }
                            }

                            over "Object_7"
                            {
                                over "Object_4"
                                {
                                }
                            }

                            over "Object_8"
                            {
                                over "Object_5"
                                {
                                }
                            }

                            over "Object_9"
                            {
                                over "Object_6"
                                {
                                }
                            }
                        }
                    }
                }
            }
        }

        def Cylinder "Cylinder" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["DefaultMaterial", "RigidBody", "Collider", "WoodPlank"]
            uniform token axis = "Y"
            double height = 0.8
            rel material:binding = </Root/WoodPlank> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double radius = 0.1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0.4, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/VaseGroup/Cylinder/DefaultMaterial/DefaultSurfaceShader.outputs:surface>
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 109.5)
                float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }
    }

    def Xform "BallotGroup" (
        active = true
    )
    {
        reorder nameChildren = ["InputTarget", "Collider", "RigidBody", "ImageBasedLightReceiver", "GroundingShadow", "Group"]
        float3 xformOp:translate = (-0.75, 0, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.3, 1.4012045, 0.3)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, 0.70060223, 0)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = -1
            bool gravityEnabled = 1
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = -1
            bool lockRotationX = 1
            bool lockRotationY = 1
            bool lockRotationZ = 1
            bool lockTranslationX = 0
            bool lockTranslationY = 1
            bool lockTranslationZ = 0
            token motionType = "Dynamic"

            def RealityKitStruct "massFrame"
            {
                float3 m_inertia = (0.1, 0.1, 0.1)
                float m_mass = 0.001

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "ImageBasedLightReceiver"
        {
            rel iblEntity = </Root/Sphere>
            uniform token info:id = "RealityKit.ImageBasedLightReceiver"
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def "Ballot" (
            active = true
            references = @Ballot_box.usdz@
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.01, 0.01, 0.01)
            float3 xformOp:translate = (0, 1.1, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "Meshes"
            {
                over "Sketchfab_model"
                {
                    over "_73_5258_IV_Neogotycka_urna_fbx"
                    {
                        over "RootNode"
                        {
                            over "default"
                            {
                                over "default_173_5258_IV_Neogotycka_urna_03_FIN_Material_u1_v1_0"
                                {
                                    over "default_173_5258_IV_Neogotycka_urna_03_FIN_Material_u1_v1_0"
                                    {
                                    }
                                }

                                over "default_173_5258_IV_Neogotycka_urna_03_FIN_Material_u1_v1_0_1"
                                {
                                    over "default_173_5258_IV_Neogotycka_urna_03_FIN_Material_u1_v1_0"
                                    {
                                    }
                                }

                                over "default_173_5258_IV_Neogotycka_urna_03_FIN_Material_u1_v1_0_2"
                                {
                                    over "default_173_5258_IV_Neogotycka_urna_03_FIN_Material_u1_v1_0"
                                    {
                                    }
                                }

                                over "default_173_5258_IV_Neogotycka_urna_03_FIN_Material_u1_v1_0_3"
                                {
                                    over "default_173_5258_IV_Neogotycka_urna_03_FIN_Material_u1_v1_0"
                                    {
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        def Cylinder "Cylinder" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["DefaultMaterial", "RigidBody", "Collider", "WoodPlank"]
            uniform token axis = "Y"
            double height = 0.8
            rel material:binding = </Root/WoodPlank> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double radius = 0.15
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0.4, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/BallotGroup/Cylinder/DefaultMaterial/DefaultSurfaceShader.outputs:surface>
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 109.5)
                float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }
    }

    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Sphere/DefaultMaterial>
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 2, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:opacity = 0
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "ImageBasedLight"
        {
            asset ibl = @ImageBasedLighting.skybox/ImageBasedLight.exr@
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }
}

